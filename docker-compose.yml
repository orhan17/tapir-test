version: '3.8'

services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php-docker-laravel
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel-network
    labels:
      - "traefik.http.routers.app.rule=Host(`localhost`)"
      - "traefik.http.services.app.loadbalancer.server.port=9000"

  db:
    image: mysql:8.0
    container_name: php-docker-laravel-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network

  redis:
    image: redis:6.0
    container_name: php-docker-laravel-redis
    networks:
      - laravel-network

  nginx:
    image: nginx:latest
    container_name: php-docker-laravel-nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www/html
    networks:
      - laravel-network
    labels:
      - "traefik.enable=false" # Отключаем для Nginx

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: php-docker-laravel-phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    networks:
      - laravel-network
    labels:
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - laravel-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - laravel-network
    volumes:
      - grafana_data:/var/lib/grafana

networks:
  laravel-network:

volumes:
  dbdata:
  grafana_data:
